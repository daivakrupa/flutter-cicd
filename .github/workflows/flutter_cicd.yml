name: Flutter CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-analyze:
    name: Build, Test, Analyze, and Scan
    runs-on: ubuntu-latest

    env:
      SONAR_PROJECT_KEY: daivakrupa_flutter-cicd
      SONAR_ORGANIZATION: daivakrupat
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            build
          key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.7'
          channel: 'stable'

      - name: Verify Flutter & Dart versions
        run: |
          flutter --version
          dart --version

      - name: Install dependencies
        run: flutter pub get

      - name: Run unit tests
        run: flutter test --coverage

      - name: Convert coverage to XML
        run: |
          flutter pub global activate coverage
          flutter pub global run coverage:format_coverage \
            --lcov -i coverage/lcov.info \
            --out coverage/coverage.xml \
            --report-on lib

      - name: SonarCloud Analysis
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }}
            -Dsonar.sources=lib
            -Dsonar.tests=test
            -Dsonar.coverageReportPaths=coverage/coverage.xml
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.exclusions=android/**,ios/**,macos/**,linux/**,windows/**,build/**
            -Dsonar.c.file.suffixes=- 
            -Dsonar.cpp.file.suffixes=-
            -Dsonar.objc.file.suffixes=-
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.14.0
        with:
          scan-type: fs
          severity: CRITICAL,HIGH
          exit-code: '1'        # Fail pipeline if high/critical found
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-report.txt'

      - name: Build Android APK
        run: flutter build apk --release

      - name: Build iOS (no codesign)
        run: flutter build ios --no-codesign

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/ios/iphoneos/*.app

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            trivy-report.txt
            coverage/coverage.xml
