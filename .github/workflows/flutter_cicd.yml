name: Flutter CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  analyze:
    name: Static Analysis & Security Scan
    runs-on: ubuntu-latest
    outputs:
      scan-status: ${{ steps.trivy.outcome }}
    env:
      SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.7'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Run unit tests with coverage
        run: flutter test --coverage

      - name: Install lcov
        run: sudo apt-get install -y lcov

      - name: Generate coverage report
        run: genhtml coverage/lcov.info -o coverage/html

      - name: SonarCloud Analysis
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }}
            -Dsonar.sources=lib
            -Dsonar.tests=test
            -Dsonar.dart.lcov.reportPaths=coverage/lcov.info
            -Dsonar.exclusions=android/**,ios/**,macos/**,linux/**,windows/**,build/**
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Run Trivy Vulnerability Scanner
        id: trivy
        uses: aquasecurity/trivy-action@0.14.0
        with:
          scan-type: fs
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-report.txt'

      - name: Upload Scan Reports
        uses: actions/upload-artifact@v4
        with:
          name: analysis-reports
          path: |
            coverage/html
            trivy-report.txt

  android:
    name: Android Build & Play Store Deploy
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.7'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android AppBundle
        run: flutter build appbundle --release

      - name: Upload Android Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-artifact
          path: build/app/outputs/bundle/release/app-release.aab

      # Optional: Play Store Deployment
      # - name: Deploy to Google Play
      #   uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
      #     packageName: com.example.app
      #     releaseFiles: build/app/outputs/bundle/release/app-release.aab
      #     track: production
      #     status: completed

  ios:
    name: iOS Build & App Store Deploy
    runs-on: macos-latest
    needs: analyze
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.7'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS app (no codesign)
        run: flutter build ipa --no-codesign

      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-artifact
          path: build/ios/ipa/*.ipa

      # Optional: App Store Deployment
      # - name: Deploy to App Store
      #   uses: apple-actions/upload-testflight-build@v1
      #   with:
      #     app-path: build/ios/ipa/*.ipa
      #     issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
      #     api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
      #     api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
